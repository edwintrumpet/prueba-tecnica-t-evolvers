basePath: /
definitions:
  models.CreateCustomer:
    properties:
      address:
        example: 742 Evergreen Terrace
        type: string
      firstName:
        example: Homer
        type: string
      lastName:
        example: Simpson
        type: string
    required:
    - address
    - firstName
    - lastName
    type: object
  models.CreateWorkOrder:
    properties:
      customerId:
        example: 256c1214-3385-4235-9cfe-1dc85a5f2a46
        format: uuid
        type: string
      plannedTimeBegin:
        example: "2023-06-27T17:45:00.408032Z"
        type: string
      plannedTimeEnd:
        example: "2023-06-27T17:45:00.408032Z"
        type: string
      title:
        example: something
        type: string
    required:
    - customerId
    - plannedTimeBegin
    - plannedTimeEnd
    - title
    type: object
  models.Customer:
    properties:
      address:
        example: 742 Evergreen Terrace
        type: string
      createdAt:
        example: "2023-06-26T17:45:00.408032Z"
        format: iso
        type: string
      endDate:
        example: "0001-01-01T00:00:00Z"
        format: iso
        type: string
      firstName:
        example: Homer
        type: string
      id:
        example: 256c1214-3385-4235-9cfe-1dc85a5f2a46
        format: uuid
        type: string
      isActive:
        example: false
        type: boolean
      lastName:
        example: Simpson
        type: string
      startDate:
        example: "0001-01-01T00:00:00Z"
        format: iso
        type: string
    type: object
  models.FinishWorkOrder:
    properties:
      customerId:
        example: 256c1214-3385-4235-9cfe-1dc85a5f2a46
        format: uuid
        type: string
      workOrderId:
        example: cd9bde09-5374-4749-86a6-34866c100e6e
        format: uuid
        type: string
    required:
    - customerId
    - workOrderId
    type: object
  models.WorkOrder:
    properties:
      createdAt:
        example: "2023-06-26T17:45:00.408032Z"
        format: iso
        type: string
      customer:
        $ref: '#/definitions/models.Customer'
      customerId:
        example: 256c1214-3385-4235-9cfe-1dc85a5f2a46
        format: uuid
        type: string
      id:
        example: cd9bde09-5374-4749-86a6-34866c100e6e
        format: uuid
        type: string
      plannedTimeBegin:
        example: "2023-06-27T17:45:00.408032Z"
        type: string
      plannedTimeEnd:
        example: "2023-06-27T17:45:00.408032Z"
        type: string
      status:
        allOf:
        - $ref: '#/definitions/models.workOrderStatus'
        example: ok
      title:
        example: something
        type: string
    type: object
  models.workOrderStatus:
    enum:
    - new
    type: string
    x-enum-varnames:
    - New
host: http://35.175.235.82
info:
  contact: {}
  description: API to manage customers and work orders
  title: enerBit API
  version: "0.1"
paths:
  /customers:
    get:
      description: List customers with is_active in true
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.Customer'
            type: array
      summary: List active customers
      tags:
      - Customers
    post:
      consumes:
      - application/json
      description: Creates a new customer
      parameters:
      - description: initial data to create a customer
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/models.CreateCustomer'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/models.Customer'
      summary: Create
      tags:
      - Customers
  /workorders:
    get:
      description: List all work orders with filters by status and date
      parameters:
      - description: iso date
        in: query
        name: until
        type: string
      - description: iso date
        in: query
        name: since
        type: string
      - description: new, cancelled, done
        in: query
        name: status
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.WorkOrder'
            type: array
      summary: List all work orders
      tags:
      - Work orders
    post:
      consumes:
      - application/json
      description: Creates a new work order
      parameters:
      - description: initial data to create a work order
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/models.CreateWorkOrder'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/models.WorkOrder'
      summary: Create
      tags:
      - Work orders
  /workorders/customer/{customerId}:
    get:
      description: List all work orders by a customer
      parameters:
      - description: uuid
        in: path
        name: customerId
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.WorkOrder'
            type: array
      summary: List work orders by customer
      tags:
      - Work orders
  /workorders/finish:
    post:
      consumes:
      - application/json
      description: Finishes a work order
      parameters:
      - description: ids to find the work order to finish
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/models.FinishWorkOrder'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.WorkOrder'
      summary: Finish
      tags:
      - Work orders
swagger: "2.0"
